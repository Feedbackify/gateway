syntax = "proto3";

package auth.v1;

option go_package="./auth.v1";

import "google/api/annotations.proto";
//import "protoc-gen-openapiv2/options/annotations.proto";

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message Data {
  string access_token = 3;
  string refresh_token = 4;
}

message RegisterResponse {
  string status = 1;
  string code = 2;
  Data data = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ResetPasswordRequest {
  string email = 1;
}

message ResetPasswordResponse {}

message ChangePasswordRequest {
  string reset_token = 1;
  string new_password = 2;
}

message ChangePasswordResponse {}

message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutResponse {}

message VerifyTokenRequest {
  string token = 1;
}

message VerifyTokenResponse {
  bool valid = 1;
}

service AuthService {

  rpc Register (RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/register"
      body: "*",
    };
  }

  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/reset-password"
      body: "*"
    };
  }

  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/change-password"
      body: "*"
    };
  }

  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/refresh-token"
      body: "*"
    };
  }

  rpc Logout (LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }

  rpc VerifyToken (VerifyTokenRequest) returns (VerifyTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/verify-token"
      body: "*"
    };
  }

}